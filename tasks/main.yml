---

- name: Check if only NTP is needed
  set_fact:
    timesync_mode: 1
  when: timesync_ptp_domains|length == 0

- name: Check if single PTP is needed
  set_fact:
    timesync_mode: 2
  when:
    - timesync_mode is not defined
    - timesync_ntp_servers|length == 0
    - timesync_ptp_domains|length == 1
    - timesync_ptp_domains[0].interfaces|length == 1

- name: Check if both NTP and PTP are needed
  set_fact:
    timesync_mode: 3
  when: timesync_mode is not defined

- name: Determine current NTP provider
  timesync_provider:
  when:
    - timesync_mode != 2
    - timesync_ntp_provider == ''

- name: Select NTP provider
  set_fact:
    timesync_ntp_provider: "{{ timesync_ntp_provider_os_default if timesync_ntp_provider_current == '' else timesync_ntp_provider_current }}"
  when:
    - timesync_mode != 2
    - timesync_ntp_provider == ''

- name: include the appropriate provider tasks
  include_tasks: "main-{{ timesync_ntp_provider }}.yml"

- name: Enable ptp4l
  service:
    name: ptp4l
    state: started
    enabled: true
  when: timesync_mode == 2

- name: Enable phc2sys
  service:
    name: phc2sys
    state: started
    enabled: true
  when:
    - timesync_mode == 2
    - timesync_mode2_hwts

- name: Enable timemaster
  service:
    name: timemaster
    state: started
    enabled: true
  when: timesync_mode == 3
